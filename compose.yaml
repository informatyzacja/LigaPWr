# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
networks:
  network:


services:
  server:
    build:
      context: .
    expose:
      - 8000
    environment:
      DB_ENGINE: 'django.db.backends.postgresql'
      DB_NAME: 'ligapwr'
      DB_USER_NAME: 'postgres'
      DB_HOST: 'db'
      DB_PORT: '5432'
      DB_PASSWORD: '${DB_PASSWORD}'
      SECRET_KEY: '${SECRET_KEY}'
      DEBUG: 'False'
      ALLOWED_HOSTS: '*'
      STATIC_ROOT: '/www/static'
      ADD_DUMMY_DATA: 'True'
    links:
      - "db:db"
    volumes:
      - static:/var/www/static/
    networks:
      network:
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ligapwr
      - POSTGRES_USER=postgres
      - DATABASE_HOST=localhost
      - DB_PASSWORD=${DB_PASSWORD}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      network:
  adminer:
    image: adminer
    restart: always
    ports:
      - 9876:9876
    networks:
      network:
  nginx:
    #image: nginx
    restart: always
    build: ./nginx/
    depends_on:
      - server
    ports:
      - "80"
    volumes:
      - static:/usr/share/nginx/html
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    networks:
      network:
        # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - certbot_logs:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    command: "certonly --webroot --webroot-path /var/www/certbot/ -d ligapwr.samorzad.pwr.edu.pl -d ligapwr.samorzad.pwr.edu.pl -m milosz.bedrylo@gmail.com --agree-tos --staple --non-interactive"

volumes:
  static:
  certbot_conf:
  certbot_www:
  certbot_logs:
  db-data:
